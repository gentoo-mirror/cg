--- a/rtsx.h	2012-03-21 02:40:18.000000000 +0100
+++ b/rtsx.h	2019-03-25 11:05:11.332916667 +0100
@@ -182,6 +182,8 @@
 	return (struct rtsx_dev *) host->hostdata;
 }
 
+void do_gettimeofday(struct timeval *tv);
+
 static inline void get_current_time(u8 *timeval_buf, int buf_len)
 {
 	struct timeval tv;

--- a/rtsx.c	2019-03-25 11:31:15.169429302 +0100
+++ b/rtsx.c	2019-03-25 11:32:41.618409686 +0100
@@ -274,7 +274,7 @@
 	 * periodically someone should test to see which setting is more
 	 * optimal.
 	 */
-	.use_clustering =		1,
+	//.use_clustering =		1,
 
 	
 	.emulated =			1,
@@ -499,13 +499,13 @@
 		 */
 		else if (chip->srb->device->id) {
 			printk(KERN_ERR "Bad target number (%d:%d)\n",
-				  chip->srb->device->id, chip->srb->device->lun);
+			       chip->srb->device->id, (int)chip->srb->device->lun);
 			chip->srb->result = DID_BAD_TARGET << 16;
 		}
 
 		else if (chip->srb->device->lun > chip->max_lun) {
 			printk(KERN_ERR "Bad LUN (%d:%d)\n",
-				  chip->srb->device->id, chip->srb->device->lun);
+			       chip->srb->device->id, (int)chip->srb->device->lun);
 			chip->srb->result = DID_BAD_TARGET << 16;
 		}