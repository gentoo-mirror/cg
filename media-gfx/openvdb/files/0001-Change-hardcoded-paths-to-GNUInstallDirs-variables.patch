diff -Nru a/cmake/FindBlosc.cmake b/cmake/FindBlosc.cmake
--- a/cmake/FindBlosc.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindBlosc.cmake	2018-04-14 03:15:39.085608180 +0300
@@ -37,7 +37,7 @@
 
 FIND_PACKAGE ( PackageHandleStandardArgs )
 
-FIND_PATH( BLOSC_LOCATION include/blosc.h
+FIND_PATH( BLOSC_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/blosc.h
   "$ENV{BLOSC_ROOT}"
   NO_DEFAULT_PATH
   NO_SYSTEM_ENVIRONMENT_PATH
@@ -49,7 +49,7 @@
 
 IF ( BLOSC_FOUND )
 
-  SET ( BLOSC_LIBRARYDIR ${BLOSC_LOCATION}/lib
+  SET ( BLOSC_LIBRARYDIR ${BLOSC_LOCATION}/${CMAKE_INSTALL_LIBDIR}
     CACHE STRING "Blosc library directories")
 
   SET ( _blosc_library_name "blosc" )
@@ -75,6 +75,6 @@
     SET( CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES_BACKUP} )
   ENDIF()
 
-  SET( BLOSC_INCLUDE_DIR "${BLOSC_LOCATION}/include" CACHE STRING "Blosc include directory" )
+  SET( BLOSC_INCLUDE_DIR "${BLOSC_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}" CACHE STRING "Blosc include directory" )
 
 ENDIF ( BLOSC_FOUND )
diff -Nru a/cmake/FindCPPUnit.cmake b/cmake/FindCPPUnit.cmake
--- a/cmake/FindCPPUnit.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindCPPUnit.cmake	2018-04-14 03:15:39.085608180 +0300
@@ -38,7 +38,7 @@
 
 FIND_PACKAGE ( PackageHandleStandardArgs )
 
-FIND_PATH( CPPUNIT_LOCATION include/cppunit/Test.h
+FIND_PATH( CPPUNIT_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/cppunit/Test.h
   "$ENV{CPPUNIT_ROOT}"
   NO_DEFAULT_PATH
   NO_CMAKE_ENVIRONMENT_PATH
@@ -53,13 +53,14 @@
 
 IF ( CPPUNIT_FOUND )
   
-  SET( CPPUNIT_INCLUDE_DIR "${CPPUNIT_LOCATION}/include" CACHE STRING "CPPUNIT include directory")
+  SET( CPPUNIT_INCLUDE_DIR "${CPPUNIT_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}"
+       CACHE STRING "CPPUNIT include directory")
   IF (CPPUnit_USE_STATIC_LIBS)
 	SET( CPPUNIT_LIBRARY_NAME libcppunit.a)
   ELSE ()
 	SET( CPPUNIT_LIBRARY_NAME cppunit)
   ENDIF ()
   FIND_LIBRARY ( CPPUnit_cppunit_LIBRARY ${CPPUNIT_LIBRARY_NAME}
-	PATHS ${CPPUNIT_LOCATION}/lib )
+	PATHS ${CPPUNIT_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
   
 ENDIF ( CPPUNIT_FOUND )
diff -Nru a/cmake/FindGLEW.cmake b/cmake/FindGLEW.cmake
--- a/cmake/FindGLEW.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindGLEW.cmake	2018-04-14 03:15:39.085608180 +0300
@@ -39,7 +39,7 @@
 
 FIND_PACKAGE ( PackageHandleStandardArgs )
 
-FIND_PATH( GLEW_LOCATION include/GL/glew.h
+FIND_PATH( GLEW_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/GL/glew.h
   "$ENV{GLEW_ROOT}"
   NO_DEFAULT_PATH
   NO_SYSTEM_ENVIRONMENT_PATH
@@ -51,17 +51,18 @@
 
 IF ( GLEW_LOCATION )
 
-  SET( GLEW_INCLUDE_DIR "${GLEW_LOCATION}/include" CACHE STRING "GLEW include path")
+  SET( GLEW_INCLUDE_DIR "${GLEW_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}"
+       CACHE STRING "GLEW include path")
 
   SET ( ORIGINAL_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})
   IF (GLEW_USE_STATIC_LIBS)
 	IF (APPLE)
       SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
-      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW PATHS ${GLEW_LOCATION}/lib
+      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR}
 		NO_DEFAULT_PATH
 		NO_SYSTEM_ENVIRONMENT_PATH
 		)
-      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEWmx PATHS ${GLEW_LOCATION}/lib
+      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEWmx PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR}
 		NO_DEFAULT_PATH
 		NO_SYSTEM_ENVIRONMENT_PATH
 		)
@@ -70,15 +71,15 @@
 	ELSEIF (WIN32)
       # Link library
       SET(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")
-      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW32S PATHS ${GLEW_LOCATION}/lib )
-      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEW32MXS PATHS ${GLEW_LOCATION}/lib )
+      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW32S PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
+      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEW32MXS PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
 	ELSE (APPLE)
       SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
-      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW PATHS ${GLEW_LOCATION}/lib
+      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR}
 		NO_DEFAULT_PATH
 		NO_SYSTEM_ENVIRONMENT_PATH
 		)
-      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEWmx PATHS ${GLEW_LOCATION}/lib
+      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEWmx PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR}
 		NO_DEFAULT_PATH
 		NO_SYSTEM_ENVIRONMENT_PATH
 		)
@@ -88,30 +89,30 @@
   ELSE ()
 	IF (APPLE)
       SET(CMAKE_FIND_LIBRARY_SUFFIXES ".dylib")
-      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW PATHS ${GLEW_LOCATION}/lib )
-      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEWmx PATHS ${GLEW_LOCATION}/lib )
+      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
+      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEWmx PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
 	ELSEIF (WIN32)
       # Link library
       SET(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")
-      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW32 PATHS ${GLEW_LOCATION}/lib )
-      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEW32mx PATHS ${GLEW_LOCATION}/lib )
+      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW32 PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
+      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEW32mx PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
       # Load library
       SET(CMAKE_FIND_LIBRARY_SUFFIXES ".dll")
-      FIND_LIBRARY ( GLEW_DLL_PATH GLEW32 PATHS ${GLEW_LOCATION}/bin
+      FIND_LIBRARY ( GLEW_DLL_PATH GLEW32 PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_BINDIR}
 		NO_DEFAULT_PATH
 		NO_SYSTEM_ENVIRONMENT_PATH
 		)
-      FIND_LIBRARY ( GLEWmx_DLL_PATH GLEW32mx PATHS ${GLEW_LOCATION}/bin
+      FIND_LIBRARY ( GLEWmx_DLL_PATH GLEW32mx PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_BINDIR}
 		NO_DEFAULT_PATH
 		NO_SYSTEM_ENVIRONMENT_PATH
 		)
 	ELSE (APPLE)
 	  # Unices
-      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW PATHS ${GLEW_LOCATION}/lib
+      FIND_LIBRARY ( GLEW_LIBRARY_PATH GLEW PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR}
 		NO_DEFAULT_PATH
 		NO_SYSTEM_ENVIRONMENT_PATH
 		)
-      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEWmx PATHS ${GLEW_LOCATION}/lib
+      FIND_LIBRARY ( GLEWmx_LIBRARY_PATH GLEWmx PATHS ${GLEW_LOCATION}/${CMAKE_INSTALL_LIBDIR}
 		NO_DEFAULT_PATH
 		NO_SYSTEM_ENVIRONMENT_PATH
 		)
diff -Nru a/cmake/FindGLFW3.cmake b/cmake/FindGLFW3.cmake
--- a/cmake/FindGLFW3.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindGLFW3.cmake	2018-04-14 03:15:39.085608180 +0300
@@ -39,7 +39,7 @@
 
 FIND_PACKAGE ( PackageHandleStandardArgs )
 
-FIND_PATH( GLFW3_LOCATION include/GLFW/glfw3.h
+FIND_PATH( GLFW3_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/GLFW/glfw3.h
   "$ENV{GLFW3_ROOT}"
   NO_DEFAULT_PATH
   NO_SYSTEM_ENVIRONMENT_PATH
@@ -50,9 +50,10 @@
   )
 
 IF (GLFW3_FOUND)
-  SET( GLFW3_INCLUDE_DIR "${GLFW3_LOCATION}/include" CACHE STRING "GLFW3 include path")
+  SET( GLFW3_INCLUDE_DIR "${GLFW3_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}"
+       CACHE STRING "GLFW3 include path")
   IF (GLFW3_USE_STATIC_LIBS)
-    FIND_LIBRARY ( GLFW3_glfw_LIBRARY  glfw3  ${GLFW3_LOCATION}/lib
+    FIND_LIBRARY ( GLFW3_glfw_LIBRARY  glfw3  ${GLFW3_LOCATION}/${CMAKE_INSTALL_LIBDIR}
 	  NO_DEFAULT_PATH
 	  NO_CMAKE_ENVIRONMENT_PATH
 	  NO_CMAKE_PATH
@@ -60,7 +61,7 @@
 	  NO_CMAKE_SYSTEM_PATH
 	  )
   ELSE (GLFW3_USE_STATIC_LIBS)
-    FIND_LIBRARY ( GLFW3_glfw_LIBRARY  glfw  ${GLFW3_LOCATION}/lib
+    FIND_LIBRARY ( GLFW3_glfw_LIBRARY  glfw  ${GLFW3_LOCATION}/${CMAKE_INSTALL_LIBDIR}
 	  NO_DEFAULT_PATH
 	  NO_CMAKE_ENVIRONMENT_PATH
 	  NO_CMAKE_PATH
diff -Nru a/cmake/FindGLFW.cmake b/cmake/FindGLFW.cmake
--- a/cmake/FindGLFW.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindGLFW.cmake	2018-04-14 06:28:36.627982403 +0300
@@ -38,18 +38,19 @@
 
 SET ( GLFW_FOUND FALSE )
 
-FIND_PATH( GLFW_LOCATION include/GL/glfw.h
+FIND_PATH( GLFW_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/GL/glfw.h
   "$ENV{GLFW_ROOT}"
   NO_SYSTEM_ENVIRONMENT_PATH
   )
 
-SET( GLFW_INCLUDE_DIR "${GLFW_LOCATION}/include" CACHE STRING "GLFW include path")
+SET( GLFW_INCLUDE_DIR "${GLFW_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}"
+     CACHE STRING "GLFW include path")
 
 SET ( ORIGINAL_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})
 IF (GLFW_USE_STATIC_LIBS)
   IF (APPLE)
     SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
-    FIND_LIBRARY ( GLFW_LIBRARY_PATH GLFW PATHS ${GLFW_LOCATION}/lib
+    FIND_LIBRARY ( GLFW_LIBRARY_PATH GLFW PATHS ${GLFW_LOCATION}/${CMAKE_INSTALL_LIBDIR}
       NO_DEFAULT_PATH
       NO_SYSTEM_ENVIRONMENT_PATH
 	  )
@@ -58,10 +59,10 @@
   ELSEIF (WIN32)
     # Link library
     SET(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")
-    FIND_LIBRARY ( GLFW_LIBRARY_PATH GLFW32S PATHS ${GLFW_LOCATION}/lib )
+    FIND_LIBRARY ( GLFW_LIBRARY_PATH GLFW32S PATHS ${GLFW_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
   ELSE (APPLE)
     SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
-    FIND_LIBRARY ( GLFW_LIBRARY_PATH glfw PATHS ${GLFW_LOCATION}/lib ${GLFW_LOCATION}/lib64
+    FIND_LIBRARY ( GLFW_LIBRARY_PATH glfw PATHS ${GLFW_LOCATION}/${CMAKE_INSTALL_LIBDIR} ${GLFW_LOCATION}/lib64
       NO_DEFAULT_PATH
       NO_SYSTEM_ENVIRONMENT_PATH
 	  )
@@ -71,20 +72,20 @@
 ELSE ()
   IF (APPLE)
     SET(CMAKE_FIND_LIBRARY_SUFFIXES ".dylib")
-    FIND_LIBRARY ( GLFW_LIBRARY_PATH GLFW PATHS ${GLFW_LOCATION}/lib )
+    FIND_LIBRARY ( GLFW_LIBRARY_PATH GLFW PATHS ${GLFW_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
   ELSEIF (WIN32)
     # Link library
     SET(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")
-    FIND_LIBRARY ( GLFW_LIBRARY_PATH GLFW32 PATHS ${GLFW_LOCATION}/lib )
+    FIND_LIBRARY ( GLFW_LIBRARY_PATH GLFW32 PATHS ${GLFW_LOCATION}/${CMAKE_INSTALL_LIBDIR} )
     # Load library
     SET(CMAKE_FIND_LIBRARY_SUFFIXES ".dll")
-    FIND_LIBRARY ( GLFW_DLL_PATH GLFW32 PATHS ${GLFW_LOCATION}/bin
+    FIND_LIBRARY ( GLFW_DLL_PATH GLFW32 PATHS ${GLFW_LOCATION}/${CMAKE_INSTALL_BINDIR}
       NO_DEFAULT_PATH
       NO_SYSTEM_ENVIRONMENT_PATH
       )
   ELSE (APPLE)
 	# Unices
-    FIND_LIBRARY ( GLFW_LIBRARY_PATH glfw PATHS ${GLFW_LOCATION}/lib ${GLFW_LOCATION}/lib64
+    FIND_LIBRARY ( GLFW_LIBRARY_PATH glfw PATHS ${GLFW_LOCATION}/${CMAKE_INSTALL_LIBDIR}
       NO_SYSTEM_ENVIRONMENT_PATH
 	  )
   ENDIF (APPLE)
diff -Nru a/cmake/FindILMBase.cmake b/cmake/FindILMBase.cmake
--- a/cmake/FindILMBase.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindILMBase.cmake	2018-04-14 03:15:39.085608180 +0300
@@ -43,7 +43,7 @@
 
 FIND_PACKAGE ( PackageHandleStandardArgs )
 
-FIND_PATH ( ILMBASE_LOCATION include/OpenEXR/IlmBaseConfig.h
+FIND_PATH ( ILMBASE_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR/IlmBaseConfig.h
   "$ENV{ILMBASE_ROOT}"
   NO_DEFAULT_PATH
   NO_SYSTEM_ENVIRONMENT_PATH
@@ -57,11 +57,11 @@
 
 IF ( ILMBASE_FOUND )
 
-  FILE ( STRINGS "${ILMBASE_LOCATION}/include/OpenEXR/IlmBaseConfig.h" _ilmbase_version_major_string REGEX "#define ILMBASE_VERSION_MAJOR ")
+  FILE ( STRINGS "${ILMBASE_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR/IlmBaseConfig.h" _ilmbase_version_major_string REGEX "#define ILMBASE_VERSION_MAJOR ")
   STRING ( REGEX REPLACE "#define ILMBASE_VERSION_MAJOR" "" _ilmbase_version_major_unstrip "${_ilmbase_version_major_string}")
   STRING ( STRIP "${_ilmbase_version_major_unstrip}" ILMBASE_VERSION_MAJOR )
 
-  FILE ( STRINGS "${ILMBASE_LOCATION}/include/OpenEXR/IlmBaseConfig.h" _ilmbase_version_minor_string REGEX "#define ILMBASE_VERSION_MINOR ")
+  FILE ( STRINGS "${ILMBASE_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR/IlmBaseConfig.h" _ilmbase_version_minor_string REGEX "#define ILMBASE_VERSION_MINOR ")
   STRING ( REGEX REPLACE "#define ILMBASE_VERSION_MINOR" "" _ilmbase_version_minor_unstrip "${_ilmbase_version_minor_string}")
   STRING ( STRIP "${_ilmbase_version_minor_unstrip}" ILMBASE_VERSION_MINOR )
 
@@ -78,10 +78,10 @@
   ENDIF ( ILMBASE_NAMESPACE_VERSIONING )
 
   SET ( ILMBASE_INCLUDE_DIRS
-    ${ILMBASE_LOCATION}/include
-    ${ILMBASE_LOCATION}/include/OpenEXR
+    ${ILMBASE_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}
+    ${ILMBASE_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
     CACHE STRING "ILMBase include directories")
-  SET ( ILMBASE_LIBRARYDIR ${ILMBASE_LOCATION}/lib
+  SET ( ILMBASE_LIBRARYDIR ${ILMBASE_LOCATION}/${CMAKE_INSTALL_LIBDIR}
     CACHE STRING "ILMBase library directories")
   SET ( ILMBASE_FOUND TRUE )
   
diff -Nru a/cmake/FindMaya.cmake b/cmake/FindMaya.cmake
--- a/cmake/FindMaya.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindMaya.cmake	2018-04-14 03:15:39.085608180 +0300
@@ -40,7 +40,7 @@
 
 FIND_PACKAGE ( PackageHandleStandardArgs )
 
-FIND_PATH( MAYA_LOCATION include/maya/MTypes.h
+FIND_PATH( MAYA_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/maya/MTypes.h
   "$ENV{MAYA_LOCATION}"
   NO_DEFAULT_PATH
   NO_CMAKE_ENVIRONMENT_PATH
@@ -55,7 +55,7 @@
 
 IF ( MAYA_FOUND )
 
-  SET( MAYA_INCLUDE_DIR       "${MAYA_LOCATION}/include" CACHE STRING "Maya include directory")
+  SET( MAYA_INCLUDE_DIR       "${MAYA_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}" CACHE STRING "Maya include directory")
 
   # Determine Maya version, including point releases
   # Currently only works for Maya 2016 and onwards so
@@ -88,7 +88,7 @@
   
   FOREACH ( lib_component ${MAYA_LIBRARY_COMPONENTS} )
     FIND_LIBRARY ( MAYA_${lib_component}_LIBRARY  ${lib_component}
-      PATHS ${MAYA_LOCATION}/lib
+      PATHS ${MAYA_LOCATION}/${CMAKE_INSTALL_LIDIR}
 	  NO_DEFAULT_PATH
       NO_SYSTEM_ENVIRONMENT_PATH
       )
@@ -108,7 +108,7 @@
 	
 	FOREACH ( lib_component ${MAYA_BOOST_LIBRARY_COMPONENTS} )
       FIND_LIBRARY ( MAYA_${lib_component}_LIBRARY  ${lib_component}-${MAYA_BOOST_VERSION}
-		PATHS ${MAYA_LOCATION}/lib
+		PATHS ${MAYA_LOCATION}/${CMAKE_INSTALL_LIBDIR}
 		NO_DEFAULT_PATH
 		NO_SYSTEM_ENVIRONMENT_PATH
 		)
diff -Nru a/cmake/FindOpenEXR.cmake b/cmake/FindOpenEXR.cmake
--- a/cmake/FindOpenEXR.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindOpenEXR.cmake	2018-04-14 03:15:39.085608180 +0300
@@ -38,7 +38,7 @@
 
 FIND_PACKAGE ( PackageHandleStandardArgs )
 
-FIND_PATH ( OPENEXR_LOCATION include/OpenEXR/OpenEXRConfig.h
+FIND_PATH ( OPENEXR_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR/OpenEXRConfig.h
   ENV OPENEXR_ROOT
   NO_DEFAULT_PATH
   NO_SYSTEM_ENVIRONMENT_PATH
@@ -52,11 +52,11 @@
 
 IF ( OPENEXR_FOUND )
 
-  FILE ( STRINGS "${OPENEXR_LOCATION}/include/OpenEXR/OpenEXRConfig.h" _openexr_version_major_string REGEX "#define OPENEXR_VERSION_MAJOR ")
+  FILE ( STRINGS "${OPENEXR_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR/OpenEXRConfig.h" _openexr_version_major_string REGEX "#define OPENEXR_VERSION_MAJOR ")
   STRING ( REGEX REPLACE "#define OPENEXR_VERSION_MAJOR" "" _openexr_version_major_unstrip "${_openexr_version_major_string}")
   STRING ( STRIP "${_openexr_version_major_unstrip}" OPENEXR_VERSION_MAJOR )
 
-  FILE ( STRINGS "${OPENEXR_LOCATION}/include/OpenEXR/OpenEXRConfig.h" _openexr_version_minor_string REGEX "#define OPENEXR_VERSION_MINOR ")
+  FILE ( STRINGS "${OPENEXR_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR/OpenEXRConfig.h" _openexr_version_minor_string REGEX "#define OPENEXR_VERSION_MINOR ")
   STRING ( REGEX REPLACE "#define OPENEXR_VERSION_MINOR" "" _openexr_version_minor_unstrip "${_openexr_version_minor_string}")
   STRING ( STRIP "${_openexr_version_minor_unstrip}" OPENEXR_VERSION_MINOR )
   
@@ -69,10 +69,10 @@
   ENDIF ( OPENEXR_NAMESPACE_VERSIONING )
 	
   SET ( OPENEXR_INCLUDE_DIRS
-    ${OPENEXR_LOCATION}/include
-    ${OPENEXR_LOCATION}/include/OpenEXR
+    ${OPENEXR_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}
+    ${OPENEXR_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
     CACHE STRING "Openexr include directories")
-  SET ( OPENEXR_LIBRARYDIR ${OPENEXR_LOCATION}/lib
+  SET ( OPENEXR_LIBRARYDIR ${OPENEXR_LOCATION}/${CMAKE_INSTALL_LIBDIR}
     CACHE STRING "Openexr library directories")
   SET ( OPENEXR_FOUND TRUE )
 
diff -Nru a/cmake/FindOpenVDB.cmake b/cmake/FindOpenVDB.cmake
--- a/cmake/FindOpenVDB.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindOpenVDB.cmake	2018-04-14 03:19:42.422284311 +0300
@@ -45,7 +45,7 @@
 
 FIND_PACKAGE( PackageHandleStandardArgs )
 
-FIND_PATH( OPENVDB_LOCATION include/openvdb/version.h 
+FIND_PATH( OPENVDB_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/openvdb/version.h 
   "$ENV{OPENVDB_ROOT}"
   NO_DEFAULT_PATH
   NO_SYSTEM_ENVIRONMENT_PATH
@@ -56,10 +56,10 @@
   )
 
 IF( OpenVDB_FOUND )
-  SET( OpenVDB_INCLUDE_DIR ${OPENVDB_LOCATION}/include
+  SET( OpenVDB_INCLUDE_DIR ${OPENVDB_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}
     CACHE PATH "OpenVDB include directory")
 
-  SET( OpenVDB_LIBRARY_DIR ${OPENVDB_LOCATION}/lib
+  SET( OpenVDB_LIBRARY_DIR ${OPENVDB_LOCATION}/${CMAKE_INSTALL_LIBDIR}
     CACHE PATH "OpenVDB library directory" )
   
   FIND_LIBRARY( OpenVDB_OPENVDB_LIBRARY openvdb
diff -Nru a/cmake/FindTBB.cmake b/cmake/FindTBB.cmake
--- a/cmake/FindTBB.cmake	2018-04-10 21:22:17.000000000 +0300
+++ b/cmake/FindTBB.cmake	2018-04-14 03:15:39.085608180 +0300
@@ -42,7 +42,7 @@
 
 # SET ( TBB_FOUND FALSE )
 
-FIND_PATH( TBB_LOCATION include/tbb/tbb.h
+FIND_PATH( TBB_LOCATION ${CMAKE_INSTALL_INCLUDEDIR}/tbb/tbb.h
   "$ENV{TBB_ROOT}"
   NO_DEFAULT_PATH
   NO_CMAKE_ENVIRONMENT_PATH
@@ -57,13 +57,13 @@
 
 IF ( TBB_FOUND )
 
-  SET( TBB_INCLUDE_DIR "${TBB_LOCATION}/include" CACHE STRING "TBB include directory")
+  SET( TBB_INCLUDE_DIR "${TBB_LOCATION}/${CMAKE_INSTALL_INCLUDEDIR}" CACHE STRING "TBB include directory")
 
   IF (APPLE)
 	IF (TBB_FOR_CLANG)
-      SET ( TBB_LIBRARYDIR ${TBB_LOCATION}/lib/libc++ CACHE STRING "TBB library directory")
+      SET ( TBB_LIBRARYDIR ${TBB_LOCATION}/${CMAKE_INSTALL_LIBDIR}/libc++ CACHE STRING "TBB library directory")
 	ELSE ()
-      SET ( TBB_LIBRARYDIR ${TBB_LOCATION}/lib CACHE STRING "TBB library directory")
+      SET ( TBB_LIBRARYDIR ${TBB_LOCATION}/${CMAKE_INSTALL_LIBDIR} CACHE STRING "TBB library directory")
 	ENDIF ()
 	SET(CMAKE_FIND_LIBRARY_SUFFIXES ".dylib")
 	FIND_LIBRARY ( TBB_LIBRARY_PATH tbb PATHS ${TBB_LIBRARYDIR} )
@@ -86,7 +86,7 @@
 	LIST ( APPEND TBB_LIBRARIES_LIST ${TBB_LIBRARY_PATH} ${TBBmx_LIBRARY_PATH} )
   ELSE (APPLE)
 	# MESSAGE ( "CMAKE_COMPILER_IS_GNUCXX = ${CMAKE_COMPILER_IS_GNUCXX}")
-    SET ( TBB_LIBRARYDIR ${TBB_LOCATION}/lib CACHE STRING "TBB library directory")
+    SET ( TBB_LIBRARYDIR ${TBB_LOCATION}/${CMAKE_INSTALL_LIBDIR} CACHE STRING "TBB library directory")
 	IF (${CMAKE_COMPILER_IS_GNUCXX})
 	  IF ( TBB_MATCH_COMPILER_VERSION )
 		STRING(REGEX MATCHALL "[0-9]+" GCC_VERSION_COMPONENTS ${CMAKE_CXX_COMPILER_VERSION})
diff -Nru a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2018-04-10 21:22:17.000000000 +0300
+++ b/CMakeLists.txt	2018-04-14 03:15:39.085608180 +0300
@@ -64,6 +64,8 @@
 
 LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
 
+INCLUDE ( GNUInstallDirs )
+
 SET ( OPENVDB_TOP_LEVEL_DIR ${PROJECT_SOURCE_DIR} CACHE PATH "OpenVDB Top Level Directory to share among sub projects" )
 
 INCLUDE_DIRECTORIES ( ${OPENVDB_TOP_LEVEL_DIR} ) # To make sure we pick up headers from this version of OpenVDB we are building
diff -Nru a/openvdb/CMakeLists.txt b/openvdb/CMakeLists.txt
--- a/openvdb/CMakeLists.txt	2018-04-10 21:22:17.000000000 +0300
+++ b/openvdb/CMakeLists.txt	2018-04-14 03:15:39.085608180 +0300
@@ -414,7 +414,7 @@
     )
 
   INSTALL ( CODE "EXECUTE_PROCESS(COMMAND \"${CMAKE_COMMAND}\" --build  \"${PROJECT_BINARY_DIR}\" --target doc)")
-  INSTALL ( DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html DESTINATION docs)
+  INSTALL ( DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html DESTINATION ${CMAKE_INSTALL_DOCDIR})
 
 ENDIF ()
 
@@ -423,37 +423,37 @@
   INSTALL ( TARGETS
     vdb_view
     DESTINATION
-    bin
+    ${CMAKE_INSTALL_BINDIR}
     )
 ENDIF ()
 INSTALL ( TARGETS
   vdb_print
   vdb_render
   DESTINATION
-  bin
+  ${CMAKE_INSTALL_BINDIR}
   )
 
 INSTALL ( TARGETS
   openvdb_static
   DESTINATION
-  lib
+  ${CMAKE_INSTALL_LIBDIR}
   )
 
 IF (WIN32)
   INSTALL ( TARGETS
 	openvdb_shared
-	RUNTIME DESTINATION bin COMPONENT Runtime
-	ARCHIVE DESTINATION lib COMPONENT Runtime
+	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT Runtime
+	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT Runtime
 	)
 ELSE()
   INSTALL ( TARGETS
 	openvdb_shared
 	DESTINATION
-	lib
+	${CMAKE_INSTALL_LIBDIR}
 	)
 ENDIF ()
 
-INSTALL ( DIRECTORY ${PROJECT_SOURCE_DIR} DESTINATION include
+INSTALL ( DIRECTORY ${PROJECT_SOURCE_DIR} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
   FILES_MATCHING PATTERN "*.h"
   PATTERN "python" EXCLUDE
   PATTERN "cmd" EXCLUDE
diff -Nru a/openvdb/python/CMakeLists.txt b/openvdb/python/CMakeLists.txt
--- a/openvdb/python/CMakeLists.txt	2018-04-10 21:22:17.000000000 +0300
+++ b/openvdb/python/CMakeLists.txt	2018-04-14 03:15:39.085608180 +0300
@@ -54,10 +54,12 @@
   pyVec3Grid.cc
   )
 
-SET ( PYOPENVDB_INSTALL_DIRECTORY
-  lib/python${OPENVDB_PYTHON_VERSION_MAJOR}.${OPENVDB_PYTHON_VERSION_MINOR}
-  CACHE STRING "The directory to install the pyopenvdb.so module."
-  )
+IF ( NOT DEFINED PYOPENVDB_INSTALL_DIRECTORY)
+  SET ( PYOPENVDB_INSTALL_DIRECTORY
+    ${CMAKE_INSTALL_LIBDIR}/python${OPENVDB_PYTHON_VERSION_MAJOR}.${OPENVDB_PYTHON_VERSION_MINOR}/site-packages
+    CACHE STRING "The directory to install the pyopenvdb.so module."
+    )
+ENDIF ()
 
 SET_SOURCE_FILES_PROPERTIES ( ${OPENVDB_PYTHON_MODULE_SOURCE_FILES}
   PROPERTIES
diff -Nru a/openvdb_houdini/CMakeLists.txt b/openvdb_houdini/CMakeLists.txt
--- a/openvdb_houdini/CMakeLists.txt	2018-04-10 21:22:17.000000000 +0300
+++ b/openvdb_houdini/CMakeLists.txt	2018-04-14 03:15:39.085608180 +0300
@@ -238,7 +238,7 @@
   INSTALL ( TARGETS
     openvdb_houdini
     DESTINATION
-    ${OPENVDB_HFS_INSTALL_BASE_DIR}/lib
+    ${OPENVDB_HFS_INSTALL_BASE_DIR}/${CMAKE_INSTALL_LIBDIR}
     )
 
 ELSE ()
