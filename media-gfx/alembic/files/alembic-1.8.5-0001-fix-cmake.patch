--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -100,9 +100,6 @@ SET(DARWIN FALSE)
 IF ("${CMAKE_SYSTEM_NAME}" MATCHES "Darwin")
     SET(DARWIN TRUE)
     # suppress rpath warning
-    IF (POLICY CMP0042)
-        CMAKE_POLICY(SET CMP0042 OLD)
-    ENDIF()
 ENDIF()
 
 SET(LINUX FALSE)
@@ -212,7 +209,6 @@ INCLUDE("./cmake/AlembicIlmBase.cmake")
 
 # HDF5
 IF (USE_HDF5)
-    FIND_PACKAGE(ZLIB REQUIRED)
     SET(ALEMBIC_WITH_HDF5 "1")
     INCLUDE("./cmake/AlembicHDF5.cmake")
     SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DH5_USE_18_API")
--- a/lib/Alembic/CMakeLists.txt
+++ b/lib/Alembic/CMakeLists.txt
@@ -68,28 +68,26 @@ IF (ALEMBIC_SHARED_LIBS)
 
   if (ALEMBIC_USING_IMATH_3)
     if (APPLE OR UNIX)
-      set_target_properties(Alembic PROPERTIES INSTALL_RPATH "$<TARGET_FILE_DIR:${ALEMBIC_ILMBASE_LIBS}>")
     endif ()
   endif ()
 ENDIF()
 
 
 TARGET_LINK_LIBRARIES(Alembic
-    LINK_PUBLIC
+    PUBLIC
     ${ALEMBIC_ILMBASE_LIBS}
     ${CMAKE_THREAD_LIBS_INIT}
     ${EXTERNAL_MATH_LIBS}
-    LINK_PRIVATE
+    PRIVATE
     ${HDF5_LIBRARIES}
-    ${ZLIB_LIBRARY}
   )
 
 SET( ALEMBIC_LIB_INSTALL_DIR lib CACHE STRING "Where to install the Alembic libs")
 INSTALL(TARGETS Alembic
         EXPORT AlembicTargets
-        LIBRARY DESTINATION ${ALEMBIC_LIB_INSTALL_DIR}
-        ARCHIVE DESTINATION ${ALEMBIC_LIB_INSTALL_DIR}
-        RUNTIME DESTINATION ${ALEMBIC_LIB_INSTALL_DIR})
+        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
 
 #-******************************************************************************
 # PACKAGE EXPORTS
--- a/python/PyAlembic/CMakeLists.txt
+++ b/python/PyAlembic/CMakeLists.txt
@@ -156,7 +156,7 @@ if ("${PYTHON_LIBRARIES}" STREQUAL "")
 endif()
 
 TARGET_LINK_LIBRARIES(alembic
-    LINK_PUBLIC
+    PUBLIC
     Alembic::Alembic
     ${PYTHON_LIBRARIES}
     ${Boost_LIBRARIES}
--- a/cmake/AlembicPyIlmBase.cmake
+++ b/cmake/AlembicPyIlmBase.cmake
@@ -40,7 +40,7 @@ SET(PYTHON_VERSION_MINOR ${Python${PYALE
 SET(PYTHON_INCLUDE_DIR ${Python${PYTHON_VERSION_MAJOR}_INCLUDE_DIRS})
 
 IF (Imath_FOUND)
-    SET(ALEMBIC_PYILMBASE_PYIMATH_LIB Imath::PyImath_Python${PYTHON_VERSION_MAJOR}_${PYTHON_VERSION_MINOR})
+    SET(ALEMBIC_PYILMBASE_PYIMATH_LIB PyImath_Python${PYTHON_VERSION_MAJOR}_${PYTHON_VERSION_MINOR}-3_1)
     MESSAGE(STATUS "Found package Imath using: ${ALEMBIC_PYILMBASE_PYIMATH_LIB}")
 ELSE()
     FIND_PACKAGE(PyIlmBase)

