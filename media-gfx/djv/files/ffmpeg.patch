--- a/plugins/djvFFmpegPlugin/djvFFmpeg.cpp
+++ b/plugins/djvFFmpegPlugin/djvFFmpeg.cpp
@@ -90,7 +90,7 @@ djvFFmpeg::Packet::Packet()
 
 djvFFmpeg::Packet::~Packet()
 {
-    av_free_packet(&_p);
+    av_packet_unref(&_p);
 }
 
 AVPacket & djvFFmpeg::Packet::operator () ()
--- a/plugins/djvFFmpegPlugin/djvFFmpeg.h
+++ b/plugins/djvFFmpegPlugin/djvFFmpeg.h
@@ -49,6 +49,7 @@ extern "C"
 #include <libavcodec/avcodec.h>
 #include <libavformat/avformat.h>
 #include <libavutil/dict.h>
+#include <libavutil/imgutils.h>
 #include <libswscale/swscale.h>
 
 } // extern "C"
--- a/plugins/djvFFmpegPlugin/djvFFmpegLoad.cpp
+++ b/plugins/djvFFmpegPlugin/djvFFmpegLoad.cpp
@@ -164,7 +164,7 @@ void djvFFmpegLoad::open(const djvFileInfo & in, djvImageIoInfo & info)
         _avCodecContext->pix_fmt,
         _avCodecContext->width,
         _avCodecContext->height,
-        PIX_FMT_RGBA,
+        AV_PIX_FMT_RGBA,
         SWS_BILINEAR,
         0,
         0,
@@ -250,12 +250,14 @@ void djvFFmpegLoad::read(djvImage & image, const djvImageIoFrameInfo & frame)
     djvPixelData * data = frame.proxy ? &_tmp : &image;
     data->set(_info);
     
-    avpicture_fill(
-        (AVPicture *)_avFrameRgb,
+    av_image_fill_arrays(
+        _avFrameRgb->data,
+        _avFrameRgb->linesize,
         data->data(),
-        PIX_FMT_RGBA,
+        AV_PIX_FMT_RGBA,
         data->w(),
-        data->h());
+        data->h(),
+        1);
 
     int f = frame.frame;
 
--- a/plugins/djvFFmpegPlugin/djvFFmpegSave.cpp
+++ b/plugins/djvFFmpegPlugin/djvFFmpegSave.cpp
@@ -305,17 +305,20 @@ void djvFFmpegSave::open(const djvFileInfo & fileInfo, const djvImageIoInfo & in
     _avFrame->format = avCodecContext->pix_fmt;
 
     _avFrameBuf = (uint8_t *)av_malloc(
-        avpicture_get_size(
+        av_image_get_buffer_size(
             avCodecContext->pix_fmt,
             avCodecContext->width,
-            avCodecContext->height));
+            avCodecContext->height,
+            1));
 
-    avpicture_fill(
-        (AVPicture *)_avFrame,
+    av_image_fill_arrays(
+        _avFrame->data,
+        _avFrame->linesize,
         _avFrameBuf,
         avCodecContext->pix_fmt,
         avCodecContext->width,
-        avCodecContext->height);
+        avCodecContext->height,
+        1);
 
     _avFrameRgb = av_frame_alloc();
     
@@ -365,12 +368,14 @@ void djvFFmpegSave::write(const djvImage & in, const djvImageIoFrameInfo & frame
     
     // Encode the image.
 
-    avpicture_fill(
-        (AVPicture *)_avFrameRgb,
+    av_image_fill_arrays(
+        _avFrameRgb->data,
+        _avFrameRgb->linesize,
         p->data(),
         _avFrameRgbPixel,
         p->w(),
-        p->h());
+        p->h(),
+        1);
     
     quint64 pixelByteCount = p->pixelByteCount();
     quint64 scanlineByteCount = p->scanlineByteCount();
